apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: $APP_NAME
  name: $APP_NAME
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: $APP_NAME
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: $APP_NAME
      annotations:
        co.elastic.logs: "false"
        co.elastic.logs/enabled: "false"
        co.elastic.logs/json.add_error_key: "true"
        co.elastic.logs/json.ignore_decoding_error: "true"
        co.elastic.logs/json.keys_under_root: "false"
        co.elastic.logs/processors.add_fields.fields.index: elk-index-$APP_NAME
        co.elastic.logs/processors.timestamp.field: json.time
        co.elastic.logs/processors.timestamp.layouts: UNIX_MS
        co.elastic.logs/processors.timestamp.timezone: Asia/Shanghai
    spec:
      hostname: $APP_NAME
      containers:
        - image: $APP_NAME:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: $APP_NAME
          name: $APP_NAME
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 40
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 2
          ports:
            - containerPort: 8080
              name: $APP_NAME
              protocol: TCP
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
      restartPolicy: Always
      volumes:
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_NAME
spec:
  ports:
    - name: $APP_NAME
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: $APP_NAME
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: $APP_NAME
data:
  HTTP_PORT: "8080"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $APP_NAME
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "5M"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1200"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1200"
spec:
  rules:
    - host: $APP_NAME.domain
      http:
        paths:
          - backend:
              serviceName: $APP_NAME
              servicePort: 8080